@{
    ViewBag.Title = "Add Files";
}

<input type="hidden" id="equipmentId" value="@ViewBag.EquipmentId">

<h1>Dodaj pliki</h1>
<br />
<div class="flex-ver">
    <div class="w-75 form-field flex">
        <div class="w-25">
            <label class="form-label pt" for="CategoryId">Kategoria</label>
        </div>
        <div class="flex-1">
            <select name="CategoryId" id="CategoryId" class="form-input">
                <option value="">Wybierz kategorię</option>
                @foreach (var category in ViewBag.Categories)
                {
                    <option value="@category.CategoryId">@category.CategoryName</option>
                }
            </select>
        </div>
    </div>
<div class="w-75 box">   
    
    <div class="input-bx">
        
        <input type="file" id="upload" accept=".pdf" multiple="multiple" name="name" hidden />
        <label for="upload" class="uploadlabel">
            <span><i class="fa-solid fa-cloud-upload"></i></span>
            <p>Kliknij aby wgrać pliki</p>
        </label>

        <div id="filewrapper">
            <h4 class="uploaded">Wgrane pliki:</h4>           
        </div>
        <div class="centered-button">
            <button type="button" id="submitBtn1" class="upload-button">Prześlij pliki</button>
        </div>

    </div>
</div>
</div>
<br /><br />

<h3>Dokumentacja techniczno-ruchowa</h3>
<table class="table w-100 mt">
    <thead>
        <tr>
            <th>Nr</th>
            <th>Nazwa</th>
            <th>Rozmiar</th>
            <th>Rodzaj</th>            
            <th>Opcje</th>
        </tr>
    </thead>
    <tbody id="technicalDocsTable">
    </tbody>
</table>
<br />

<h3>Schemat elektryczny</h3>
<table class="table w-100 mt">
    <thead>
        <tr>
            <th>Nr</th>
            <th>Nazwa</th>
            <th>Rozmiar</th>
            <th>Rodzaj</th>
            <th>Opcje</th>
        </tr>
    </thead>
    <tbody id="electricalSchemasTable">
    </tbody>
</table>
<br />

<h3>Inne</h3>
<table class="table w-100 mt">
    <thead>
        <tr>
            <th>Nr</th>
            <th>Nazwa</th>
            <th>Rozmiar</th>
            <th>Rodzaj</th>
            <th>Opcje</th>
        </tr>
    </thead>
    <tbody id="otherFilesTable">
    </tbody>
</table>
<br />

<div class="centered-button">
    <button class="button button-green-back" onclick="redirectToIndex()">Zakończ</button>
</div>

@section scripts{
    <script>
        window.addEventListener("load", () => {
            const input = document.getElementById("upload");
            const filewrapper = document.getElementById("filewrapper");
            const submitButton = document.getElementById("submitBtn1");

            let selectedFiles = [];

            input.addEventListener("change", (e) => {
                const files = e.target.files;
                for (let i = 0; i < files.length; i++) {
                    let file = files[i];
                    let fileName = file.name;
                    let fileType = fileName.split(".").pop();
                    let fileURL = URL.createObjectURL(file); 

                    fileshow(fileName, fileType, fileURL, file);
                }
            });

            const fileshow = (fileName, fileType, fileURL, file) => {
                const showfileboxElem = document.createElement("div");
                showfileboxElem.classList.add("showfilebox");
                const leftElem = document.createElement("div");
                leftElem.classList.add("left");
                const fileTypeElem = document.createElement("span");
                fileTypeElem.classList.add("filetype");
                fileTypeElem.innerHTML = fileType;

                const fileLinkElem = document.createElement("a");
                fileLinkElem.href = fileURL;
                fileLinkElem.target = "_blank";  
                fileLinkElem.innerHTML = fileName;
                fileLinkElem.classList.add("upload-link");

                leftElem.append(fileTypeElem);
                leftElem.append(fileLinkElem);
                showfileboxElem.append(leftElem);

                const rightElem = document.createElement("div");
                rightElem.classList.add("right");
                showfileboxElem.append(rightElem);
                const trashcanElem = document.createElement("span");
                trashcanElem.innerHTML = '<i class="link fa-solid fa-trash" title="Usuń"></i>';
                rightElem.append(trashcanElem);

                filewrapper.append(showfileboxElem);

                trashcanElem.addEventListener("click", () => {
                    filewrapper.removeChild(showfileboxElem);
                    selectedFiles = selectedFiles.filter(f => f !== file);
                })

                selectedFiles.push(file);
            };

            submitButton.addEventListener("click", () => {
                if (selectedFiles.length == 0) {
                    alert("Proszę wybrać jakieś pliki");
                    return;
                }
                
                const categoryId = document.getElementById("CategoryId").value;
                if (!categoryId) {
                    alert("Proszę wybrać kategorię przed przesłaniem plików");
                    
                    return;
                }

                const formData = new FormData();
                selectedFiles.forEach(file => {
                    formData.append("files", file);
                });
                
                formData.append("categoryId", categoryId);

                const equipmentId = document.getElementById("equipmentId").value;
                formData.append("equipmentId", equipmentId);

                fetch("/add-equipment/upload-files", {
                    method: "POST",
                    body: formData
                })
                    .then(response => response.json())
                    .then(data => {                        
                        console.log(data);
                        
                        const showfileboxes = document.querySelectorAll(".showfilebox");
                        showfileboxes.forEach(box => {
                            box.remove();
                        });
                        
                        alert("Pliki zostały przesłane pomyślnie!");
                        
                        selectedFiles.forEach(file => {
                            URL.revokeObjectURL(file);
                        });
                        
                        selectedFiles = [];
                        
                        input.value = null;

                        fetch(`/add-files/GetFilesByCategory?categoryId=${categoryId}&equipmentId=${equipmentId}`, {
                            method: "GET"
                        })
                            .then(response => response.text())
                            .then(data => {                                
                                
                                switch (parseInt(categoryId)) {
                                    case 1: 
                                        document.getElementById("technicalDocsTable").innerHTML = data;
                                        break;
                                    case 2: 
                                        document.getElementById("electricalSchemasTable").innerHTML = data;
                                        break;
                                    case 3: 
                                        document.getElementById("otherFilesTable").innerHTML = data;
                                        break;
                                    default:
                                        break;
                                }
                            })
                    })
                    .catch(error => {                        
                        console.error("Błąd:", error);
                    });
            });
        });

        document.addEventListener("click", function (event) {            
            if (event.target.classList.contains("list-trash")) {
                const fileId = event.target.getAttribute("data-fileid");                
                const confirmation = confirm("Czy na pewno chcesz usunąć ten plik?");
                if (confirmation) {
                    fetch(`/delete-file/${fileId}`, {
                        method: "GET"
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {

                                const categoryId = data.categoryId;

                                fetch("/add-files/GetFilesByCategory?categoryId=" + categoryId, {
                                    method: "GET"
                                })
                                    .then(response => response.text())
                                    .then(data => {
                                        
                                        switch (parseInt(categoryId)) {
                                            case 1: 
                                                document.getElementById("technicalDocsTable").innerHTML = data;
                                                break;
                                            case 2: 
                                                document.getElementById("electricalSchemasTable").innerHTML = data;
                                                break;
                                            case 3: 
                                                document.getElementById("otherFilesTable").innerHTML = data;
                                                break;
                                            default:
                                                break;
                                        }
                                    })
                              
                            } else {
                                alert("Wystąpił problem podczas usuwania pliku.");
                            }
                        })
                        .catch(error => {
                            console.error("Wystąpił błąd:", error);
                        });                    
                }
            }
        });

        function redirectToIndex() {            
            window.location.href = '/equipment'; 
        }

    </script>
}